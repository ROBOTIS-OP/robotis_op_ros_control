#!/usr/bin/env python
PACKAGE = "robotis_op_ros_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
p = 32.0
i = 0.001
d = 1.0
p_max = 200.0
i_max = 100.0
d_max = 100.0

#Head
gen.add("j_pan_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_pan_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_pan_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_tilt_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_tilt_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_tilt_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

#Arms
gen.add("j_shoulder_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_shoulder_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_shoulder_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_shoulder_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_shoulder_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_shoulder_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_high_arm_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_high_arm_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_high_arm_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_high_arm_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_high_arm_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_high_arm_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_low_arm_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_low_arm_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_low_arm_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_low_arm_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_low_arm_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_low_arm_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

#Legs
gen.add("j_pelvis_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_pelvis_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_pelvis_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_pelvis_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_pelvis_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_pelvis_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_thigh1_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_thigh1_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_thigh1_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_thigh1_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_thigh1_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_thigh1_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_thigh2_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_thigh2_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_thigh2_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_thigh2_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_thigh2_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_thigh2_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_ankle1_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_ankle1_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_ankle1_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_ankle1_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_ankle1_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_ankle1_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_ankle2_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_ankle2_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_ankle2_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_ankle2_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_ankle2_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_ankle2_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_tibia_r_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_tibia_r_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_tibia_r_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("j_tibia_l_position_controller_p_gain",     double_t,  0, "p gain",	p, 0.0, p_max)
gen.add("j_tibia_l_position_controller_i_gain",     double_t,  0, "i gain",	i, 0.0, i_max)
gen.add("j_tibia_l_position_controller_d_gain",     double_t,  0, "d gain",	d, 0.0, d_max)

gen.add("print_check_fall_debug_info",     bool_t,  0, "Print additional IMU info while walking", False)

exit(gen.generate(PACKAGE, "robotis_op_ros_control", "robotis_op_ros_control"))
